//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : WebSAE
//  @ File Name : AE_Categoria_Evento.java
//  @ Date : 23/04/2009
//  @ Author : Guillermo Pizarro
//
//

package websae.mae.dominio;

import java.math.BigDecimal;
import java.util.Date;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import mad.eventos.Datos;
import mad.objetos.Registro;
import mad.objetos.Table;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class AE_Categoria_Evento {
    
    // <editor-fold defaultstate="collapsed" desc="Objetos Maestros">
	public AE_Categoria ref_categoria;
	public AE_Evento ref_evento;
    // </editor-fold>
    
    // <editor-fold defaultstate="collapsed" desc="Objetos Dependientes">
	public List< AE_Registro > ref_registro;
    // </editor-fold>
    
    // <editor-fold defaultstate="collapsed" desc="Atributos">
	private BigDecimal ce_id_categoria_evento;
	private Float ce_precio;
	private Date ce_fecha_inicio;
	private Date ce_fecha_fin;
    // </editor-fold>
    
    public AE_Categoria_Evento() {
        this.ref_categoria = new AE_Categoria();
    }
    
    // <editor-fold defaultstate="collapsed" desc="Setters & Getters">
    public Date getCe_fecha_fin() {
        return ce_fecha_fin;
    }

    public void setCe_fecha_fin(Date ce_fecha_fin) {
        this.ce_fecha_fin = ce_fecha_fin;
    }

    public void setCe_fecha_fin(String fecha_fin) {
        if (fecha_fin != null) {
            DateFormat fecha = new SimpleDateFormat("yyyy-MM-dd");
            try {
                this.ce_fecha_fin = (Date) fecha.parse(fecha_fin);
            } catch (ParseException ex) {
                this.ce_fecha_fin = null;
                Logger.getLogger(AE_Categoria_Evento.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else
            this.ce_fecha_fin = null;
    }

    public Date getCe_fecha_inicio() {
        return ce_fecha_inicio;
    }

    public void setCe_fecha_inicio(Date ce_fecha_inicio) {
        this.ce_fecha_inicio = ce_fecha_inicio;
    }

    public void setCe_fecha_inicio(String fecha_inicio) {
        if (fecha_inicio != null) {
            DateFormat fecha = new SimpleDateFormat("yyyy-MM-dd");
            try {
                this.ce_fecha_inicio = (Date) fecha.parse(fecha_inicio);
            } catch (ParseException ex) {
                this.ce_fecha_inicio = null;
                Logger.getLogger(AE_Categoria_Evento.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else
            this.ce_fecha_inicio = null;
    }
    
    public BigDecimal getCe_id_categoria_evento() {
        return ce_id_categoria_evento;
    }

    public void setCe_id_categoria_evento(BigDecimal ce_id_categoria_evento) {
        this.ce_id_categoria_evento = ce_id_categoria_evento;
    }

    public Float getCe_precio() {
        return ce_precio;
    }

    public void setCe_precio(Float ce_precio) {
        this.ce_precio = ce_precio;
    }

    public AE_Categoria getRef_categoria() {
        return ref_categoria;
    }

    public void setRef_categoria(AE_Categoria ref_categoria) {
        this.ref_categoria = ref_categoria;
    }

    public AE_Evento getRef_evento() {
        return ref_evento;
    }

    public void setRef_evento(AE_Evento ref_evento) {
        this.ref_evento = ref_evento;
    }

    public List<AE_Registro> getRef_registro() {
        return ref_registro;
    }

    public void setRef_registro(List<AE_Registro> ref_registro) {
        this.ref_registro = ref_registro;
    }
    // </editor-fold>
    
	public void cr_AE_Categoria_Evento(Table objeto) {
        this.ce_id_categoria_evento = new BigDecimal( (Long) objeto.get("ce_id_categoria_evento") );
        this.ce_precio = (Float) objeto.get("ce_precio");
        this.ce_fecha_inicio = (Date) objeto.get("ce_fecha_inicio");
        this.ce_fecha_fin = (Date) objeto.get("ce_fecha_fin");
        
        this.ref_categoria.setCa_id_categoria( new BigDecimal( (Long) objeto.get("ref_categoria") ) );
	}
	
	public void fin_AE_Categoria_Evento() {
	
	}
    
    public static AE_Categoria_Evento buscar_categoria_evento(BigDecimal id_categoria_evento) {
        AE_Categoria_Evento elemento = new AE_Categoria_Evento();
        
        Datos datos = new Datos("WebSAE");
        String sql = "SELECT * FROM ae_categoria_evento WHERE ce_id_categoria_evento = "+id_categoria_evento+";";
        Registro registros = datos.consulta( sql );
        for (int i=0; i<registros.size(); i++)
            elemento.cr_AE_Categoria_Evento( (Table) registros.get(i) );
        
        return elemento;
    }
    
    public static List< AE_Categoria_Evento > mostrar_categorias_evento(String id_evento) {
        List< AE_Categoria_Evento > categorias_evento = new LinkedList< AE_Categoria_Evento >();

        Datos datos = new Datos("WebSAE");
        String sql = "SELECT * FROM ae_categoria_evento ce, ae_categoria ca " +
                     "WHERE ce.ref_evento = " + id_evento+" AND ce.ref_categoria = ca.ca_id_categoria ORDER BY ca.ca_nombre , ce.ce_fecha_inicio;";
        Registro registros = datos.consulta( sql );
        for (int i=0; i<registros.size(); i++) {
            Table objeto = (Table) registros.get(i);
            AE_Categoria_Evento elemento = new AE_Categoria_Evento();
            elemento.cr_AE_Categoria_Evento( objeto );
            categorias_evento.add( elemento );
        }
        return categorias_evento;
    }

    public static List< AE_Categoria_Evento > mostrar_categorias_evento_entrehoy(String id_evento) {
        List< AE_Categoria_Evento > categorias_evento = new LinkedList< AE_Categoria_Evento >();
        DateFormat fecha = new SimpleDateFormat("yyyy-MM-dd");
        Datos datos = new Datos("WebSAE");
        String sql = "SELECT * FROM ae_categoria_evento ce, ae_categoria ca " +
                     "WHERE ce.ref_evento = " + id_evento+" AND ce.ref_categoria = ca.ca_id_categoria " +
                     "AND date_format(now(),'%Y-%m-%d') BETWEEN ce_fecha_inicio AND ce_fecha_fin ORDER BY ca.ca_nombre , ce.ce_fecha_inicio;";
        Registro registros = datos.consulta( sql );
        for (int i=0; i<registros.size(); i++) {
            Table objeto = (Table) registros.get(i);
            AE_Categoria_Evento elemento = new AE_Categoria_Evento();
            elemento.cr_AE_Categoria_Evento( objeto );
            categorias_evento.add( elemento );
        }
        return categorias_evento;
    }

    public static JSONObject toJSON(List< AE_Categoria_Evento > auspicios) {
        JSONObject json = new JSONObject();
        try {
            JSONArray jsonItems = new JSONArray();
            for (Iterator< AE_Categoria_Evento > it = auspicios.iterator(); it.hasNext();) {
                AE_Categoria_Evento elemento = it.next();
                jsonItems.put( toJSONObject( elemento ) );
            }
            json.put("identifier", "id_categoria_evento");
            json.put("label", "fecha_inicio");
            json.put("items", jsonItems);
        } catch (JSONException ex) {
            Logger.getLogger(AE_Categoria_Evento.class.getName()).log(Level.SEVERE, null, ex);
        }
        return json;
    }

    public static JSONObject toJSONObject(AE_Categoria_Evento elemento) {
        JSONObject json = new JSONObject();
        try {
            json.put("id_categoria_evento", elemento.getCe_id_categoria_evento() );
            json.put("precio", elemento.getCe_precio() );
            json.put("fecha_inicio", elemento.getCe_fecha_inicio() );
            DateFormat dfStyle = DateFormat.getDateInstance( DateFormat.LONG );
            if (elemento.getCe_fecha_inicio() != null)
                json.put("fecha_inicio_long", dfStyle.format( elemento.getCe_fecha_inicio() ) );
            json.put("fecha_fin", elemento.getCe_fecha_fin() );
            if (elemento.getCe_fecha_fin() != null)
                json.put("fecha_fin_long", dfStyle.format( elemento.getCe_fecha_fin() ) );

            if (elemento.ref_categoria.getCa_id_categoria() != null)
                json.put("categoria", AE_Categoria.toJSONObject( AE_Categoria.buscar_categoria( elemento.ref_categoria.getCa_id_categoria().toString() ) ) );
        } catch (Exception ex) {
            Logger.getLogger(AE_Categoria_Evento.class.getName()).log(Level.SEVERE, null, ex);
        }
        return json;
    }
}
