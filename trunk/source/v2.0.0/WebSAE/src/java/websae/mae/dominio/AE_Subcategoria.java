//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : WebSAE
//  @ File Name : AE_Subcategoria.java
//  @ Date : 23/04/2009
//  @ Author : Guillermo Pizarro
//
//

package websae.mae.dominio;

import java.math.BigDecimal;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import mad.eventos.Datos;
import mad.objetos.Registro;
import mad.objetos.Table;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import websae.informacion.Estado;

public class AE_Subcategoria {

	// <editor-fold defaultstate="collapsed" desc="Objetos Maestros">
    public AE_Categoria ref_categoria;
    // </editor-fold>

    // <editor-fold defaultstate="collapsed" desc="Objetos Dependientes">
	public List< AE_Subcategoria_Evento > ref_subcategoria_evento;
    // </editor-fold>
    
    // <editor-fold defaultstate="collapsed" desc="Atributos">
	private BigDecimal su_id_subcategoria;
	private String su_nombre;
	private String su_estado;
    // </editor-fold>
    
    public AE_Subcategoria() {
        this.ref_categoria = new AE_Categoria();
    }

    // <editor-fold defaultstate="collapsed" desc="Setters & Getters">
    public AE_Categoria getRef_categoria() {
        return ref_categoria;
    }

    public void setRef_categoria(AE_Categoria ref_categoria) {
        this.ref_categoria = ref_categoria;
    }

    public List<AE_Subcategoria_Evento> getRef_subcategoria_evento() {
        return ref_subcategoria_evento;
    }

    public void setRef_subcategoria_evento(List<AE_Subcategoria_Evento> ref_subcategoria_evento) {
        this.ref_subcategoria_evento = ref_subcategoria_evento;
    }

    public String getSu_estado() {
        return su_estado;
    }

    public void setSu_estado(String su_estado) {
        this.su_estado = su_estado;
    }

    public BigDecimal getSu_id_subcategoria() {
        return su_id_subcategoria;
    }

    public void setSu_id_subcategoria(BigDecimal su_id_subcategoria) {
        this.su_id_subcategoria = su_id_subcategoria;
    }

    public String getSu_nombre() {
        return su_nombre;
    }

    public void setSu_nombre(String su_nombre) {
        this.su_nombre = su_nombre;
    }
    // </editor-fold>

	public void cr_AE_Subcategoria(Table objeto) {
        this.su_id_subcategoria = new BigDecimal( (Long) objeto.get("su_id_subcategoria") );
        this.su_nombre = (String) objeto.get("su_nombre");
        this.su_estado = (String) objeto.get("su_estado");
        this.ref_categoria.setCa_id_categoria( new BigDecimal( (Long) objeto.get("ref_categoria") ) );
	}
	
	public void fin_AE_Subcategoria() {
	}

    public static AE_Subcategoria buscar_subcategoria(String id_subcategoria) {
        AE_Subcategoria elemento = new AE_Subcategoria();

        Datos datos = new Datos("WebSAE");
        String sql = "SELECT * FROM ae_subcategoria WHERE su_id_subcategoria = "+id_subcategoria+";";
        Registro registros = datos.consulta( sql );
        for (int i=0; i<registros.size(); i++) {
            Table objeto = (Table) registros.get(i);
            elemento.cr_AE_Subcategoria( objeto );
        }
        return elemento;
    }
    
    public static List<AE_Subcategoria> subcategorias() {
        List< AE_Subcategoria > subcategorias = new LinkedList< AE_Subcategoria >();
        
        Datos datos = new Datos("WebSAE");
        String sql = "SELECT * FROM AE_subcategoria order by su_nombre;";
        Registro registros = datos.consulta( sql );
        for (int i=0; i<registros.size(); i++) {
            Table objeto = (Table) registros.get(i);
            AE_Subcategoria elemento = new AE_Subcategoria();
            elemento.cr_AE_Subcategoria( objeto );
            subcategorias.add( elemento );
        }
        return subcategorias;
    }
    
    public static List< AE_Subcategoria > mostrar_subcategorias(String id_categoria) {
        List< AE_Subcategoria > subcategorias = new LinkedList< AE_Subcategoria >();
        
        Datos datos = new Datos("WebSAE");
        String sql = "SELECT * FROM ae_subcategoria WHERE su_estado = '"+Estado.VIGENTE+"' AND ref_categoria = "+id_categoria+";";
        Registro registros = datos.consulta( sql );
        for (int i=0; i<registros.size(); i++) {
            Table objeto = (Table) registros.get(i);
            AE_Subcategoria elemento = new AE_Subcategoria();
            elemento.cr_AE_Subcategoria( objeto );
            subcategorias.add( elemento );
        }
        return subcategorias;
    }

    public static JSONObject toJSON(List< AE_Subcategoria > auspicios) {
        JSONObject json = new JSONObject();
        try {
            JSONArray jsonItems = new JSONArray();
            for (Iterator< AE_Subcategoria > it = auspicios.iterator(); it.hasNext();) {
                AE_Subcategoria elemento = it.next();
                jsonItems.put( toJSONObject( elemento ) );
            }
            json.put("identifier", "id_subcategoria");
            json.put("label", "nombre");
            json.put("items", jsonItems);
        } catch (JSONException ex) {
            Logger.getLogger(AE_Subcategoria.class.getName()).log(Level.SEVERE, null, ex);
        }
        return json;
    }

    public static JSONObject toJSONObject(AE_Subcategoria elemento) {
        JSONObject json = new JSONObject();
        try {
            json.put("id_subcategoria", elemento.getSu_id_subcategoria() );
            json.put("nombre", elemento.getSu_nombre() );
            json.put("estado", elemento.getSu_estado() );
            
            if (elemento.ref_categoria.getCa_id_categoria() != null)
                json.put("categoria", AE_Categoria.toJSONObject( AE_Categoria.buscar_categoria( elemento.ref_categoria.getCa_id_categoria().toString() ) ) );
        } catch (Exception ex) {
            Logger.getLogger(AE_Subcategoria.class.getName()).log(Level.SEVERE, null, ex);
        }
        return json;
    }
}
