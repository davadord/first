//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : WebSAE
//  @ File Name : AE_Organizador.java
//  @ Date : 23/04/2009
//  @ Author : Guillermo Pizarro
//
//

package websae.mae.dominio;

import java.math.BigDecimal;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import mad.eventos.Datos;
import mad.objetos.Registro;
import mad.objetos.Table;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import websae.informacion.Constante;
import websae.mgi.dominio.GI_Grupo_Investigacion;
import websae.msu.dominio.SU_Empresa;

public class AE_Organizador {
    
    // <editor-fold defaultstate="collapsed" desc="Objetos Maestros">
	public GI_Grupo_Investigacion ref_grupo_investigacion;
    public SU_Empresa ref_empresa;
	public AE_Evento ref_evento;
    // </editor-fold>
    
    // <editor-fold defaultstate="collapsed" desc="Atributos">
	private BigDecimal or_id_organizador;
    private String or_tipo;
    // </editor-fold>
    
    public AE_Organizador() {
    }
    
    // <editor-fold defaultstate="collapsed" desc="Setters & Getters">
    public BigDecimal getOr_id_organizador() {
        return or_id_organizador;
    }

    public void setOr_id_organizador(BigDecimal or_id_organizador) {
        this.or_id_organizador = or_id_organizador;
    }

    public String getOr_tipo() {
        return or_tipo;
    }

    public void setOr_tipo(String or_tipo) {
        this.or_tipo = or_tipo;
    }

    public SU_Empresa getRef_empresa() {
        return ref_empresa;
    }

    public void setRef_empresa(SU_Empresa ref_empresa) {
        this.ref_empresa = ref_empresa;
    }

    public GI_Grupo_Investigacion getRef_grupo_investigacion() {
        return ref_grupo_investigacion;
    }

    public void setRef_grupo_investigacion(GI_Grupo_Investigacion ref_grupo_investigacion) {
        this.ref_grupo_investigacion = ref_grupo_investigacion;
    }

    public AE_Evento getRef_evento() {
        return ref_evento;
    }

    public void setRef_evento(AE_Evento ref_evento) {
        this.ref_evento = ref_evento;
    }
    // </editor-fold>
    
	public void cr_AE_Organizador(Table objeto) {
        this.setOr_id_organizador( new BigDecimal( (Long) objeto.get("or_id_organizador") ) );
        this.setOr_tipo( (String) objeto.get("or_tipo"));
        
        if ( this.getOr_tipo() != null && this.getOr_tipo().compareTo( Constante.GRUPO_INVESTIGACION ) == 0 ) {
            this.ref_grupo_investigacion = new GI_Grupo_Investigacion();
            this.ref_grupo_investigacion = GI_Grupo_Investigacion.buscar_grupo_investigacion( new BigDecimal( (Long) objeto.get("ref_grupo_investigacion") ) );
        } else if ( this.getOr_tipo() != null && this.getOr_tipo().compareTo( Constante.EMPRESA_UNIVERSIDAD ) == 0 ) {
            this.ref_empresa = new SU_Empresa();
            this.ref_empresa = SU_Empresa.buscar_empresa( new BigDecimal( (Long) objeto.get("ref_empresa") ) );
        }
	}
	
	public void fin_AE_Organizador() {
	}
    
    public static List< AE_Organizador > mostrar_organizadores_evento(String id_evento) {
        List< AE_Organizador > elementos = new LinkedList< AE_Organizador >();
        
        Datos dato = new Datos("WebSAE");
        String sql = "SELECT * FROM ae_organizador WHERE ref_evento = " + id_evento + ";";
        Registro registros = dato.consulta( sql );
        for (int i=0; i<registros.size(); i++) {
            Table objeto = registros.get(i);
            AE_Organizador elemento = new AE_Organizador();
            elemento.cr_AE_Organizador( objeto );
            elementos.add( elemento );
        }
        return elementos;
    }

    public static JSONObject toJSON(List< AE_Organizador > elementos) {
        JSONObject json = new JSONObject();
        try {
            JSONArray jsonItems = new JSONArray();
            for (Iterator< AE_Organizador > it = elementos.iterator(); it.hasNext();) {
                AE_Organizador elemento = it.next();
                if (elemento.getOr_tipo().compareTo( Constante.GRUPO_INVESTIGACION ) == 0)
                    jsonItems.put( toJSONObject( elemento.getOr_id_organizador(), elemento.ref_grupo_investigacion, elemento.getOr_tipo() ) );
                else if (elemento.getOr_tipo().compareTo( Constante.EMPRESA_UNIVERSIDAD ) == 0)
                    jsonItems.put( toJSONObject( elemento.getOr_id_organizador(), elemento.ref_empresa, elemento.getOr_tipo() ) );
            }
            json.put("identifier", "id_organizador");
            json.put("label", "nombre");
            json.put("items", jsonItems);
        } catch (JSONException ex) {
            Logger.getLogger(AE_Organizador.class.getName()).log(Level.SEVERE, null, ex);
        }
        return json;
    }

    public static JSONObject toJSONObject(BigDecimal id, GI_Grupo_Investigacion elemento, String tipo) {
        JSONObject json = new JSONObject();
        try {
            json.put("id_organizador", id );
            json.put("nombre", elemento.getGi_nombre() );
            json.put("logo", elemento.getGi_logo() );
            json.put("url", elemento.getGi_web() );
            json.put("telefono", elemento.getGi_telefono() );
            json.put("tipo", tipo );
        } catch (Exception ex) {
            Logger.getLogger(GI_Grupo_Investigacion.class.getName()).log(Level.SEVERE, null, ex);
        }
        return json;
    }

    public static JSONObject toJSONObject(BigDecimal id, SU_Empresa elemento, String tipo) {
        JSONObject json = new JSONObject();
        try {
            json.put("id_organizador", id );
            json.put("nombre", elemento.getEm_nombre() );
            json.put("logo", elemento.getEm_logo() );
            json.put("url", elemento.getEm_web() );
            json.put("tipo", tipo );
        } catch (Exception ex) {
            Logger.getLogger(GI_Grupo_Investigacion.class.getName()).log(Level.SEVERE, null, ex);
        }
        return json;
    }
}
