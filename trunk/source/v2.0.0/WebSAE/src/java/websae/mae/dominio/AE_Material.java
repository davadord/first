//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : WebSAE
//  @ File Name : AE_Material.java
//  @ Date : 23/04/2009
//  @ Author : Guillermo Pizarro
//
//

package websae.mae.dominio;

import java.math.BigDecimal;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import mad.eventos.Datos;
import mad.objetos.Registro;
import mad.objetos.Table;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class AE_Material {

    // <editor-fold defaultstate="collapsed" desc="Objetos Maestros">
	public AE_Evento ref_evento;
	public AE_Tipo_Material ref_tipo_material;
    // </editor-fold>
    
    // <editor-fold defaultstate="collapsed" desc="Objetos Dependientes">
	public List< AE_Material_Registro > ref_material_registro;
    // </editor-fold>
    
    // <editor-fold defaultstate="collapsed" desc="Atributos">
	private BigDecimal ma_id_material;
	private Float ma_precio;
	private String ma_descripcion;
	private Integer ma_cantidad_entregar;
	private String ma_estado;
    // </editor-fold>
    
    public AE_Material() {
        this.ref_evento = new AE_Evento();
        this.ref_tipo_material = new AE_Tipo_Material();
    }

    // <editor-fold defaultstate="collapsed" desc="Setters & Getters">
    public Integer getMa_cantidad_entregar() {
        return ma_cantidad_entregar;
    }

    public void setMa_cantidad_entregar(Integer ma_cantidad_entregar) {
        this.ma_cantidad_entregar = ma_cantidad_entregar;
    }

    public String getMa_descripcion() {
        return ma_descripcion;
    }

    public void setMa_descripcion(String ma_descripcion) {
        this.ma_descripcion = ma_descripcion;
    }

    public String getMa_estado() {
        return ma_estado;
    }

    public void setMa_estado(String ma_estado) {
        this.ma_estado = ma_estado;
    }

    public BigDecimal getMa_id_material() {
        return ma_id_material;
    }

    public void setMa_id_material(BigDecimal ma_id_material) {
        this.ma_id_material = ma_id_material;
    }

    public Float getMa_precio() {
        return ma_precio;
    }

    public void setMa_precio(Float ma_precio) {
        this.ma_precio = ma_precio;
    }

    public AE_Evento getRef_evento() {
        return ref_evento;
    }

    public void setRef_evento(AE_Evento ref_evento) {
        this.ref_evento = ref_evento;
    }

    public List<AE_Material_Registro> getRef_material_registro() {
        return ref_material_registro;
    }

    public void setRef_material_registro(List<AE_Material_Registro> ref_material_registro) {
        this.ref_material_registro = ref_material_registro;
    }

    public AE_Tipo_Material getRef_tipo_material() {
        return ref_tipo_material;
    }

    public void setRef_tipo_material(AE_Tipo_Material ref_tipo_material) {
        this.ref_tipo_material = ref_tipo_material;
    }
    // </editor-fold>
    
	public void cr_AE_Material(Table objeto) {
        this.ma_id_material = new BigDecimal( (Long) objeto.get("ma_id_material") );
        this.ma_precio = (Float) objeto.get("ma_precio");
        this.ma_cantidad_entregar = (Integer) objeto.get("ma_cantidad_entregar");
        this.ma_descripcion = (String) objeto.get("ma_descripcion");
        this.ma_estado = (String) objeto.get("ma_estado");

        this.ref_tipo_material.setTm_id_tipo_material( new BigDecimal( (Long) objeto.get("ref_tipo_material") ) );
        this.ref_evento.setEv_id_evento( new BigDecimal( (Long) objeto.get("ref_evento") ) );
	}
	
	public void fin_AE_Material() {
	}

    public static List< AE_Material > materiales( String id_evento ) {
        List< AE_Material > materiales = new LinkedList< AE_Material >();
        
        Datos datos = new Datos("WebSAE");
        String sql = "SELECT * FROM ae_material ma, ae_tipo_material tm " +
                     "WHERE ma.ref_tipo_material = tm.tm_id_tipo_material AND ma.ref_evento = " + id_evento +
                     " ORDER BY tm.tm_nombre;";
        Registro registros = datos.consulta( sql );
        for (int i=0; i<registros.size(); i++) {
            Table objeto = (Table) registros.get(i);
            AE_Material elemento = new AE_Material();
            elemento.cr_AE_Material(objeto);
            materiales.add(elemento);
        }
        return materiales;
    }    

    public static JSONObject toJSON(List< AE_Material > materiales, String lang) {
        JSONObject json = new JSONObject();
        try {
            JSONArray jsonItems = new JSONArray();
            for (Iterator<AE_Material> it = materiales.iterator(); it.hasNext();) {
                AE_Material elemento = it.next();
                jsonItems.put( toJSONObject( elemento, lang ) );
            }
            json.put("identifier", "id_material");
            json.put("label", "precio");
            json.put("items", jsonItems);
        } catch (JSONException ex) {
            Logger.getLogger(AE_Material.class.getName()).log(Level.SEVERE, null, ex);
        }
        return json;
    }

    public static JSONObject toJSONObject(AE_Material elemento, String lang) {
        JSONObject json = new JSONObject();
        try {
            json.put("id_material", elemento.getMa_id_material() );
            json.put("precio", elemento.getMa_precio() );
            json.put("descripcion", elemento.getMa_descripcion() );
            json.put("cantidad_entregar", elemento.getMa_cantidad_entregar() );
            json.put("estado", elemento.getMa_estado() );
            
            if (elemento.ref_evento != null && elemento.ref_evento.getEv_id_evento() != null)
                json.put("evento", AE_Evento.toJSONObject( AE_Evento.buscar_evento(elemento.ref_evento.getEv_id_evento().toString(), lang), lang ) );
            if (elemento.ref_tipo_material != null && elemento.ref_tipo_material.getTm_id_tipo_material() != null)
                json.put("tipo_material", AE_Tipo_Material.toJSONObject( AE_Tipo_Material.buscar_tipo_material(elemento.ref_tipo_material.getTm_id_tipo_material().toString()) ) );
        } catch (Exception ex) {
            Logger.getLogger(AE_Tipo_Material.class.getName()).log(Level.SEVERE, null, ex);
        }
        return json;
    }
}
