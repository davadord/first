//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : WebSAE - Sistema de Administración de Eventos
//  @ File Name : AC_Usuario.java
//  @ Date : 28/03/2009
//  @ Author : Guillermo Pizarro
//  @ Version : v1.0.0
//
//
package websae.mac.dominio;

import java.math.BigDecimal;
import java.text.ParseException;
import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import mad.eventos.Datos;
import mad.objetos.Registro;
import mad.objetos.Table;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import websae.mae.dominio.AE_Registro;
import websae.msu.dominio.SU_Cargo;
import websae.msu.dominio.SU_Ciudad;
import websae.msu.dominio.SU_Empresa;
import websae.msu.dominio.SU_Empresa_Usuario;
import websae.msu.dominio.SU_Titulo;

public class AC_Usuario {

    // <editor-fold defaultstate="collapsed" desc="Objetos Maestros">
    public SU_Ciudad ref_ciudad;
    public SU_Titulo ref_titulo;
    // </editor-fold>
    // <editor-fold defaultstate="collapsed" desc="Objetos dependientes">
    public SU_Empresa_Usuario ref_empresa_usuario;
    /** Referencia al tipo de objeto dependiente AC_Usuario_Perfil. */
    public List<AC_Usuario_Perfil> ref_usuario_perfil;
    public List<AE_Registro> ref_registro;
    // </editor-fold>
    // <editor-fold defaultstate="collapsed" desc="Atributos">
    private BigDecimal us_id_usuario;
    private String us_nombre;
    private String us_apellido;
    private String us_email;
    private String us_clave;
    private String us_genero;
    private Date us_fecha_nacimiento;
    private String us_direccion;
    private String us_telefono;
    private String us_celular;
    private String us_actividad;
    private String us_hoja_vida;
    private String us_foto;
    private String us_estado;
    private String us_linkedin;
    // </editor-fold>

    public AC_Usuario() {
        this.ref_titulo = new SU_Titulo();
        this.ref_ciudad = new SU_Ciudad();

        this.ref_usuario_perfil = new LinkedList<AC_Usuario_Perfil>();
    }
    
    // <editor-fold defaultstate="collapsed" desc="Setters & Getters">
    public String getUs_actividad() {
        return us_actividad;
    }

    public void setUs_actividad(String us_actividad) {
        this.us_actividad = validar(us_actividad);
    }

    public String getUs_linkedin() {
        return us_linkedin;
    }

    public void setUs_linkedin(String us_linkedin) {
        this.us_linkedin = us_linkedin;
    }

    public String getUs_apellido() {
        return us_apellido;
    }

    public void setUs_apellido(String us_apellido) {
        this.us_apellido = validar(us_apellido);
    }

    public String getUs_celular() {
        return us_celular;
    }

    public void setUs_celular(String us_celular) {
        this.us_celular = validar(us_celular);
    }

    public String getUs_clave() {
        return us_clave;
    }

    public void setUs_clave(String us_clave) {
        this.us_clave = validar(us_clave);
    }

    public String getUs_direccion() {
        return us_direccion;
    }

    public void setUs_direccion(String us_direccion) {
        this.us_direccion = validar(us_direccion);
    }

    public String getUs_email() {
        return us_email;
    }

    public void setUs_email(String us_email) {
        this.us_email = validar(us_email);
    }

    public String getUs_estado() {
        return us_estado;
    }

    public void setUs_estado(String us_estado) {
        this.us_estado = us_estado;
    }

    public Date getUs_fecha_nacimiento() {
        return us_fecha_nacimiento;
    }

    public void setUs_fecha_nacimiento(Date us_fecha_nacimiento) {
        this.us_fecha_nacimiento = us_fecha_nacimiento;
    }

    public void setUs_fecha_nacimiento(String us_fecha_nacimiento) {
        if (us_fecha_nacimiento != null) {
            DateFormat fecha = new SimpleDateFormat("yyyy-MM-dd");
            try {
                this.us_fecha_nacimiento = (Date) fecha.parse(us_fecha_nacimiento);
            } catch (ParseException ex) {
                this.us_fecha_nacimiento = null;
                Logger.getLogger(AC_Usuario.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            this.us_fecha_nacimiento = null;
        }
    }

    public String getUs_foto() {
        return us_foto;
    }

    public void setUs_foto(String us_foto) {
        this.us_foto = validar(us_foto);
    }

    public String getUs_genero() {
        return us_genero;
    }

    public void setUs_genero(String us_genero) {
        this.us_genero = validar(us_genero);
    }

    public String getUs_hoja_vida() {
        return us_hoja_vida;
    }

    public void setUs_hoja_vida(String us_hoja_vida) {
        this.us_hoja_vida = validar(us_hoja_vida);
    }

    public BigDecimal getUs_id_usuario() {
        return us_id_usuario;
    }

    public void setUs_id_usuario(BigDecimal us_id_usuario) {
        this.us_id_usuario = us_id_usuario;
    }

    public String getUs_nombre() {
        return us_nombre;
    }

    public void setUs_nombre(String us_nombre) {
        this.us_nombre = validar(us_nombre);
    }

    public String getUs_telefono() {
        return us_telefono;
    }

    public void setUs_telefono(String us_telefono) {
        this.us_telefono = validar(us_telefono);
    }

    public SU_Ciudad getRef_ciudad() {
        return ref_ciudad;
    }

    public void setRef_ciudad(SU_Ciudad ref_ciudad) {
        this.ref_ciudad = ref_ciudad;
    }

    public SU_Empresa_Usuario getRef_empresa_usuario() {
        return ref_empresa_usuario;
    }

    public void setRef_empresa_usuario(SU_Empresa_Usuario ref_empresa_usuario) {
        this.ref_empresa_usuario = ref_empresa_usuario;
    }

    public SU_Titulo getRef_titulo() {
        return ref_titulo;
    }

    public void setRef_titulo(SU_Titulo ref_titulo) {
        this.ref_titulo = ref_titulo;
    }

    public List<AC_Usuario_Perfil> getRef_usuario_perfil() {
        return ref_usuario_perfil;
    }

    public void setRef_usuario_perfil(List<AC_Usuario_Perfil> ref_usuario_perfil) {
        this.ref_usuario_perfil = ref_usuario_perfil;
    }

    private String validar(String valor) {
        if (valor != null && valor.trim().compareTo("") == 0) {
            return null;
        } else {
            return valor;
        }
    }
    // </editor-fold>
    
    public void cr_AC_Usuario(Table registro, boolean es_websae) {
        this.setUs_id_usuario(new BigDecimal((Long) registro.get("us_id_usuario")));
        this.setUs_nombre((String) registro.get("us_nombre"));
        this.setUs_apellido((String) registro.get("us_apellido"));
        this.setUs_email((String) registro.get("us_email"));
        this.setUs_clave((String) registro.get("us_clave"));
        this.setUs_genero((String) registro.get("us_genero"));
        this.setUs_fecha_nacimiento((java.sql.Date) registro.get("us_fecha_nacimiento"));
        this.setUs_direccion((String) registro.get("us_direccion"));
        this.setUs_telefono((String) registro.get("us_telefono"));
        this.setUs_celular((String) registro.get("us_celular"));
        this.setUs_actividad((String) registro.get("us_actividad"));
        this.setUs_hoja_vida((String) registro.get("us_hoja_vida"));
        this.setUs_foto((String) registro.get("us_foto"));
        this.setUs_estado((String) registro.get("us_estado"));
        this.setUs_linkedin((String) registro.get("us_linkedin"));
        this.ref_titulo.setTi_id_titulo(new BigDecimal((Long) registro.get("ref_titulo")));
        this.ref_ciudad.setCi_id_ciudad(new BigDecimal((Long) registro.get("ref_ciudad")));

        if (!es_websae) {
            this.ref_ciudad.ref_pais.setPa_id_pais((String) registro.get("pa_id_pais"));

            this.ref_empresa_usuario = new SU_Empresa_Usuario();
            this.ref_empresa_usuario.ref_cargo.setCa_id_cargo(new BigDecimal((Long) registro.get("ref_cargo")));
            this.ref_empresa_usuario.ref_empresa.setEm_id_empresa(new BigDecimal((Long) registro.get("ref_empresa")));
            this.ref_empresa_usuario.ref_empresa.ref_tipo_empresa.setTe_id_tipo_empresa(new BigDecimal((Long) registro.get("te_id_tipo_empresa")));
            this.ref_empresa_usuario.setEu_telefono((String) registro.get("eu_telefono"));
        }
    }

    public void cr_AC_Usuario(Table objeto) {
        this.setUs_id_usuario(new BigDecimal((Long) objeto.get("us_id_usuario")));
        this.setUs_nombre((String) objeto.get("us_nombre"));
        this.setUs_apellido((String) objeto.get("us_apellido"));
        this.setUs_email((String) objeto.get("us_email"));
        this.setUs_clave((String) objeto.get("us_clave"));
        this.setUs_genero((String) objeto.get("us_genero"));
        this.setUs_fecha_nacimiento((java.sql.Date) objeto.get("us_fecha_nacimiento"));
        this.setUs_direccion((String) objeto.get("us_direccion"));
        this.setUs_telefono((String) objeto.get("us_telefono"));
        this.setUs_celular((String) objeto.get("us_celular"));
        this.setUs_actividad((String) objeto.get("us_actividad"));
        this.setUs_hoja_vida((String) objeto.get("us_hoja_vida"));
        this.setUs_foto((String) objeto.get("us_foto"));
        this.setUs_estado((String) objeto.get("us_estado"));
        this.setUs_linkedin((String) objeto.get("us_linkedin"));
        
        this.ref_titulo.setTi_id_titulo(new BigDecimal((Long) objeto.get("ref_titulo")));
        this.ref_ciudad.setCi_id_ciudad(new BigDecimal((Long) objeto.get("ref_ciudad")));
        this.ref_ciudad.ref_pais.setPa_id_pais((String) objeto.get("pa_id_pais"));
        
        this.ref_empresa_usuario = new SU_Empresa_Usuario();
        this.ref_empresa_usuario.ref_cargo.setCa_id_cargo(new BigDecimal((Long) objeto.get("ref_cargo")));
        this.ref_empresa_usuario.ref_empresa.setEm_id_empresa(new BigDecimal((Long) objeto.get("ref_empresa")));
        this.ref_empresa_usuario.ref_empresa.ref_tipo_empresa.setTe_id_tipo_empresa(new BigDecimal((Long) objeto.get("te_id_tipo_empresa")));
        this.ref_empresa_usuario.setEu_telefono((String) objeto.get("eu_telefono"));
    }

    public void fin_AC_Usuario() {
    }

    private void asignar_opciones_por_perfiles() {
        this.ref_usuario_perfil = new LinkedList<AC_Usuario_Perfil>();

        /** Inicialización de los perfiles que el usuario tiene asignados. */
        Datos datos = new Datos("WebSAE");
        String sql = "SELECT * FROM v_usuario_perfil WHERE us_email = '"+this.getUs_email()+"';";
        Registro perfiles = datos.consulta( sql );
        for (int i = 0; i < perfiles.size(); i++) {
            AC_Usuario_Perfil usuario_perfil = new AC_Usuario_Perfil();
            usuario_perfil.ref_perfil = new AC_Perfil();
            usuario_perfil.ref_perfil.cr_AC_Perfil( (Table) perfiles.get(i) );
            usuario_perfil.ref_perfil.ref_perfil_opcion = new LinkedList<AC_Perfil_Opcion>();
            
            this.ref_usuario_perfil.add(usuario_perfil);
        }
    }

    /** Permite la obtención del objeto usuario en la BD.
     * <p><strong>Precondiciones:</strong> us_email!=null && us_clave!=null</p>
     * <p><strong>Poscondiciones:</strong> La instancia de la clase AC_Usuario
     * debe estar seteado ó puede ser nulo.</p>
     * @return conocer si está o no el usuario en la BD.
     */
    public boolean obtener_usuario() {
        if (this.us_email != null && this.us_clave != null) {
            /** Busco todos los datos necesarios del usuario, en cuanto a la suscripcion */
            Datos dato = new Datos("WebSAE");
            String sql = "SELECT * FROM v_usuario WHERE us_email = '" + this.getUs_email() + "' AND us_clave = '" + this.getUs_clave() + "';";
            Registro registros = dato.consulta( sql );
            for (int i = 0; i < registros.size(); i++) {
                Table objeto = registros.get(i);
                this.cr_AC_Usuario(objeto);
                this.asignar_opciones_por_perfiles( );
                return true;
            }
        }
        return false;
    }

    public void ad_obtener_usuario(String modulo, boolean es_websae) {
        /** Busco todos los datos necesarios del usuario, en cuanto a la suscripcion */
        Datos dato = new Datos(modulo);
        String sql = "SELECT * FROM v_usuario WHERE us_email = '" + this.getUs_email() + "' AND us_clave = '" + this.getUs_clave() + "';";
        Registro registros = dato.consulta( sql );
        for (int i = 0; i < registros.size(); i++) {
            Table objeto = registros.get(i);
            this.cr_AC_Usuario(objeto, es_websae);
        }
    }

    public void obtener_clave(String modulo, String email) {
        /** Busco datos del usuario, como la clave para poder obtener los datos necesarios */
        Datos dato = new Datos(modulo);
        Registro registros = dato.consulta("call su_obtener_usuario('" + email + "');");
        for (int i = 0; i < registros.size(); i++) {
            Table objeto = registros.get(i);
            this.setUs_email((String) objeto.get("us_email"));
            this.setUs_clave((String) objeto.get("us_clave"));
        }
    }

    public static AC_Usuario buscar_usuario(String id_usuario) {
        AC_Usuario elemento = new AC_Usuario();
        /** Busco datos del usuario, como la clave para poder obtener los datos necesarios */
        Datos dato = new Datos("WebSAE");
        String sql = "SELECT * FROM ac_usuario WHERE us_id_usuario = " + id_usuario + ";";
        Registro registros = dato.consulta(sql);
        for (int i = 0; i < registros.size(); i++) {
            Table objeto = registros.get(i);
            elemento.cr_AC_Usuario(objeto, true);
        }
        return elemento;
    }

    public static JSONObject toJSON(List<AC_Usuario> elementos) {
        JSONObject json = new JSONObject();
        try {
            JSONArray jsonItems = new JSONArray();
            for (Iterator<AC_Usuario> it = elementos.iterator(); it.hasNext();) {
                AC_Usuario elemento = it.next();
                jsonItems.put( toJSONObject(elemento) );
            }
            json.put("items", jsonItems);
        } catch (JSONException ex) {
            Logger.getLogger(AE_Registro.class.getName()).log(Level.SEVERE, null, ex);
        }
        return json;
    }

    public static JSONObject toJSONObject(AC_Usuario usuario) {
        JSONObject json = new JSONObject();
        try {
            json.put("id_usuario", usuario.getUs_id_usuario());
            json.put("nombre", usuario.getUs_nombre());
            json.put("apellido", usuario.getUs_apellido());
            json.put("email", usuario.getUs_email());
            json.put("genero", usuario.getUs_genero());
            json.put("fecha_nacimiento", usuario.getUs_fecha_nacimiento());
            json.put("direccion", usuario.getUs_direccion());
            json.put("telefono", usuario.getUs_telefono());
            json.put("celular", usuario.getUs_celular());
            json.put("actividad", usuario.getUs_actividad());
            json.put("hoja_vida", usuario.getUs_hoja_vida());
            json.put("foto", usuario.getUs_foto());
            json.put("estado", usuario.getUs_estado());
            json.put("linkedin", usuario.getUs_linkedin());

            if (usuario.ref_titulo.getTi_id_titulo() != null) {
                json.put("titulo", SU_Titulo.toJSONObject(SU_Titulo.buscar_titulo(usuario.ref_titulo.getTi_id_titulo())));
            }
            if (usuario.ref_ciudad.getCi_id_ciudad() != null) {
                json.put("ciudad", SU_Ciudad.toJSONObject(SU_Ciudad.buscar_ciudad(usuario.ref_ciudad.getCi_id_ciudad())));
            }
            if (usuario.ref_empresa_usuario != null && usuario.ref_empresa_usuario.ref_empresa.getEm_id_empresa() != null) {
                json.put("empresa", SU_Empresa.toJSONObject(SU_Empresa.buscar_empresa(usuario.ref_empresa_usuario.ref_empresa.getEm_id_empresa())));
            }
            if (usuario.ref_empresa_usuario != null && usuario.ref_empresa_usuario.ref_cargo.getCa_id_cargo() != null) {
                json.put("cargo", SU_Cargo.toJSONObject(SU_Cargo.buscar_cargo(usuario.ref_empresa_usuario.ref_cargo.getCa_id_cargo())));
            }
            if (usuario.ref_usuario_perfil != null && usuario.ref_usuario_perfil.size() > 0) {
                json.put("perfiles", AC_Usuario_Perfil.toJSONPerfiles(usuario.ref_usuario_perfil));
            }
            if (usuario.ref_registro != null && usuario.ref_registro.size() > 0) {
                json.put("registros", AE_Registro.toJSON( usuario.ref_registro ));
            }
        } catch (Exception ex) {
            Logger.getLogger(AC_Usuario.class.getName()).log(Level.SEVERE, null, ex);
        }
        return json;
    }
}
