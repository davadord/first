//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : WebSAE
//  @ File Name : SU_Titulo.java
//  @ Date : 28/03/2009
//  @ Author : Guillermo Pizarro
//  @ Version : v1.0.0
//
//

package websae.msu.dominio;

import java.math.BigDecimal;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import mad.eventos.Datos;
import mad.objetos.Registro;
import mad.objetos.Table;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import websae.mac.dominio.AC_Usuario;

public class SU_Titulo {

    public List< AC_Usuario > ref_usuario;
    
    // <editor-fold defaultstate="collapsed" desc="Atributos">
    private BigDecimal ti_id_titulo;
    private String ti_nombre;
    private String ti_abreviatura;
    private String ti_estado;
    // </editor-fold>

    // <editor-fold defaultstate="collapsed" desc="Setters & Getters">
    public String getTi_abreviatura() {
        return ti_abreviatura;
    }

    public void setTi_abreviatura(String ti_abreviatura) {
        this.ti_abreviatura = ti_abreviatura;
    }

    public String getTi_estado() {
        return ti_estado;
    }

    public void setTi_estado(String ti_estado) {
        this.ti_estado = ti_estado;
    }

    public BigDecimal getTi_id_titulo() {
        return ti_id_titulo;
    }

    public void setTi_id_titulo(BigDecimal ti_id_titulo) {
        this.ti_id_titulo = ti_id_titulo;
    }

    public String getTi_nombre() {
        return ti_nombre;
    }

    public void setTi_nombre(String ti_nombre) {
        this.ti_nombre = ti_nombre;
    }
    // </editor-fold>
    
    public void cr_SU_Titulo(String ti_id_titulo, String ti_nombre, String ti_abreviatura, String ti_estado) {
        this.ti_id_titulo = new BigDecimal(ti_id_titulo);
        this.ti_nombre = ti_nombre;
        this.ti_abreviatura = ti_abreviatura;
        this.ti_estado = ti_estado;
	}
	
	public void fin_SU_Titulo() {
        try {
            this.finalize();
        } catch (Throwable ex) {
            Logger.getLogger(SU_Titulo.class.getName()).log(Level.SEVERE, null, ex);
        }
	}

    public static SU_Titulo buscar_titulo(BigDecimal id_titulo) {
        SU_Titulo titulo = new SU_Titulo();
        
        Datos datos = new Datos("WebSAE");
        Registro registros = datos.consulta( "SELECT * FROM su_titulo WHERE ti_id_titulo ="+id_titulo+";" );
        for (int i=0; i<registros.size(); i++) {
            Table objeto = (Table) registros.get(i);
            titulo.cr_SU_Titulo( objeto.get("ti_id_titulo").toString(), (String)objeto.get("ti_nombre"), (String)objeto.get("ti_abreviatura"), (String)objeto.get("ti_estado"));
        }        
        return titulo;
    }

    public static List<SU_Titulo> titulos() {
        List< SU_Titulo > titulos = new LinkedList< SU_Titulo >();
        
        Datos datos = new Datos("WebSAE");
        Registro registros = datos.consulta("SELECT * FROM su_titulo ORDER BY ti_nombre;");
        for (int i=0; i<registros.size(); i++) {
            Table objeto = (Table) registros.get(i);
            SU_Titulo titulo = new SU_Titulo();
            titulo.cr_SU_Titulo( objeto.get("ti_id_titulo").toString(), (String)objeto.get("ti_nombre"), (String)objeto.get("ti_abreviatura"), (String)objeto.get("ti_estado"));
            titulos.add(titulo);
        }
        return titulos;
    }

    public static List< SU_Titulo > mostrar_titulos() {
        List< SU_Titulo > titulos = new LinkedList< SU_Titulo >();

        Datos datos = new Datos("WebSAE");
        Registro registros = datos.consulta("{call su_mostrar_titulos( )}");
        for (int i=0; i<registros.size(); i++) {
            Table objeto = (Table) registros.get(i);
            SU_Titulo titulo = new SU_Titulo();
            titulo.cr_SU_Titulo( objeto.get("ti_id_titulo").toString(), (String)objeto.get("ti_nombre"), (String)objeto.get("ti_abreviatura"), (String)objeto.get("ti_estado"));
            titulos.add(titulo);
        }
        return titulos;
    }

    public static JSONObject toJSON(List< SU_Titulo > titulos) {
        JSONObject json = new JSONObject();
        try {
            JSONArray jsonItems = new JSONArray();
            for (Iterator<SU_Titulo> it = titulos.iterator(); it.hasNext();) {
                SU_Titulo titulo = it.next();
                jsonItems.put( toJSONObject( titulo ) );
            }
            json.put("identifier", "id_titulo");
            json.put("label", "nombre");
            json.put("items", jsonItems);
        } catch (JSONException ex) {
            Logger.getLogger(SU_Titulo.class.getName()).log(Level.SEVERE, null, ex);
        }
        return json;
    }
    
    public static JSONObject toJSONObject(SU_Titulo titulo) {
        JSONObject json = new JSONObject();
        try {
            json.put("id_titulo", titulo.getTi_id_titulo() );
            json.put("nombre", titulo.getTi_nombre() );
            json.put("abreviatura", titulo.getTi_abreviatura() );
            json.put("estado", titulo.getTi_estado() );
        } catch (Exception ex) {
            Logger.getLogger(SU_Titulo.class.getName()).log(Level.SEVERE, null, ex);
        }
        return json;
    }
}
