//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : WebSAE
//  @ File Name : SU_Cargo.java
//  @ Date : 28/03/2009
//  @ Author : Guillermo Pizarro
//  @ Version : v1.0.0
//
//

package websae.msu.dominio;

import java.math.BigDecimal;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import mad.eventos.Datos;
import mad.objetos.Registro;
import mad.objetos.Table;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import websae.msu.informacion.SU_Tipo_Empresa_Cargo;

public class SU_Cargo {

    // <editor-fold defaultstate="collapsed" desc="Objetos dependientes">
    public List< SU_Tipo_Empresa_Cargo > ref_tipo_empresa_cargo;
    public List< SU_Empresa_Usuario > ref_empresa_usuario;
    // </editor-fold>
    
    // <editor-fold defaultstate="collapsed" desc="Atributos">
    private BigDecimal ca_id_cargo;
    private String ca_nombre;
    private String ca_estado;
    // </editor-fold>
    
    public SU_Cargo() {
    }
    
    // <editor-fold defaultstate="collapsed" desc="Setters & Getters">
    public String getCa_estado() {
        return ca_estado;
    }

    public void setCa_estado(String ca_estado) {
        this.ca_estado = ca_estado;
    }

    public BigDecimal getCa_id_cargo() {
        return ca_id_cargo;
    }

    public void setCa_id_cargo(BigDecimal ca_id_cargo) {
        this.ca_id_cargo = ca_id_cargo;
    }

    public String getCa_nombre() {
        return ca_nombre;
    }

    public void setCa_nombre(String ca_nombre) {
        this.ca_nombre = ca_nombre;
    }

    public List<SU_Empresa_Usuario> getRef_empresa_usuario() {
        return ref_empresa_usuario;
    }

    public void setRef_empresa_usuario(List<SU_Empresa_Usuario> ref_empresa_usuario) {
        this.ref_empresa_usuario = ref_empresa_usuario;
    }

    public List<SU_Tipo_Empresa_Cargo> getRef_tipo_empresa_cargo() {
        return ref_tipo_empresa_cargo;
    }

    public void setRef_tipo_empresa_cargo(List<SU_Tipo_Empresa_Cargo> ref_tipo_empresa_cargo) {
        this.ref_tipo_empresa_cargo = ref_tipo_empresa_cargo;
    }
    // </editor-fold>
    
    public void cr_SU_Cargo(String ca_id_cargo, String ca_nombre, String ca_estado) {
        this.ca_id_cargo = new BigDecimal(ca_id_cargo);
        this.ca_nombre = ca_nombre;
        this.ca_estado = ca_estado;
    }

    public void fin_SU_Cargo() {
        try {
            this.finalize();
        } catch (Throwable ex) {
            Logger.getLogger(SU_Cargo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public static SU_Cargo buscar_cargo( BigDecimal id_cargo ) {
        SU_Cargo cargo = new SU_Cargo();
        
        Datos datos = new Datos("WebSAE");
        Registro registros = datos.consulta("SELECT * FROM su_cargo WHERE ca_id_cargo="+id_cargo +";");
        for (int i=0; i<registros.size(); i++) {
            Table objeto = (Table) registros.get(i);
            cargo.cr_SU_Cargo( objeto.get("ca_id_cargo").toString(), (String)objeto.get("ca_nombre"), (String)objeto.get("ca_estado"));
        }
        return cargo;
    }

    public static List< SU_Cargo > mostrar_cargos() {
        List< SU_Cargo > cargos = new LinkedList< SU_Cargo >();
        
        Datos datos = new Datos("WebSAE");
        Registro registros = datos.consulta("SELECT * FROM su_cargo WHERE ca_estado = 'V' ORDER BY ca_nombre;");
        for (int i=0; i<registros.size(); i++) {
            Table objeto = (Table) registros.get(i);
            SU_Cargo cargo = new SU_Cargo();
            cargo.cr_SU_Cargo( objeto.get("ca_id_cargo").toString(), (String)objeto.get("ca_nombre"), (String)objeto.get("ca_estado"));
            cargos.add(cargo);
        }
        return cargos;
    }
    
    public static List< SU_Cargo > cargos() {
        List< SU_Cargo > cargos = new LinkedList< SU_Cargo >();
        
        Datos datos = new Datos("WebSAE");
        Registro registros = datos.consulta("SELECT * FROM su_cargo ORDER BY ca_nombre;");
        for (int i=0; i<registros.size(); i++) {
            Table objeto = (Table) registros.get(i);
            SU_Cargo cargo = new SU_Cargo();
            cargo.cr_SU_Cargo( objeto.get("ca_id_cargo").toString(), (String)objeto.get("ca_nombre"), (String)objeto.get("ca_estado"));
            cargos.add(cargo);
        }
        return cargos;
    }

    public static List< SU_Cargo > mostrar_cargos_por_tipo_empresa(String id_tipo_empresa) {
        List< SU_Cargo > cargos = new LinkedList< SU_Cargo >();

        Datos datos = new Datos("WebSAE");
        Registro registros = datos.consulta("{call su_mostrar_cargos_por_tipo_empresa("+id_tipo_empresa+")}");
        for (int i=0; i<registros.size(); i++) {
            Table objeto = (Table) registros.get(i);
            SU_Cargo cargo = new SU_Cargo();
            cargo.cr_SU_Cargo( objeto.get("ca_id_cargo").toString(), (String)objeto.get("ca_nombre"), (String)objeto.get("ca_estado"));
            cargos.add(cargo);
        }
        return cargos;
    }

    public static JSONObject toJSON(List< SU_Cargo > cargos) {
        JSONObject json = new JSONObject();
        try {
            JSONArray jsonItems = new JSONArray();
            for (Iterator<SU_Cargo> it = cargos.iterator(); it.hasNext();) {
                SU_Cargo cargo = it.next();
                jsonItems.put( toJSONObject( cargo ) );
            }
            json.put("identifier", "id_cargo");
            json.put("label", "nombre");
            json.put("items", jsonItems);
        } catch (JSONException ex) {
            Logger.getLogger(SU_Cargo.class.getName()).log(Level.SEVERE, null, ex);
        }
        return json;
    }

    public static JSONObject toJSONObject(SU_Cargo cargo) {
        JSONObject json = new JSONObject();
        try {
            json.put("id_cargo", cargo.getCa_id_cargo() );
            json.put("nombre", cargo.getCa_nombre() );
            json.put("estado", cargo.getCa_estado() );
        } catch (Exception ex) {
            Logger.getLogger(SU_Cargo.class.getName()).log(Level.SEVERE, null, ex);
        }
        return json;
    }
}
