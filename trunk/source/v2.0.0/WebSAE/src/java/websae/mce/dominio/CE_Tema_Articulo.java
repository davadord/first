//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : WebSAE
//  @ File Name : CE_Tema_Articulo.java
//  @ Date : 23/04/2009
//  @ Author : Guillermo Pizarro
//
//
package websae.mce.dominio;

import java.math.BigDecimal;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import mad.eventos.Datos;
import mad.objetos.Registro;
import mad.objetos.Table;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import websae.informacion.Funciones;

public class CE_Tema_Articulo {

    public CE_Tema ref_tema;
    public CE_Articulo ref_articulo;
    
    public List< CE_Evaluacion_Articulo > ref_evaluacion_tema_articulo;

    // <editor-fold defaultstate="collapsed" desc="Atributos">
    private BigDecimal ta_id_tema_articulo;
    // </editor-fold>

    // <editor-fold defaultstate="collapsed" desc="Setters & Getters">
    public BigDecimal getTa_id_tema_articulo() {
        return ta_id_tema_articulo;
    }

    public void setTa_id_tema_articulo(BigDecimal ta_id_tema_articulo) {
        this.ta_id_tema_articulo = ta_id_tema_articulo;
    }
    // </editor-fold>

    public CE_Tema_Articulo() {
        this.ref_tema = new CE_Tema();
        this.ref_articulo = new CE_Articulo();
    }
    
    public void cr_CE_Tema_Articulo(Table objeto) {
        this.ta_id_tema_articulo = Funciones.getBigDecimal( objeto.get("ta_id_tema_articulo") );
    }

    public static List< CE_Tema_Articulo > mostrar_temas_articulo(BigDecimal id_articulo) {
        List< CE_Tema_Articulo > elementos = new LinkedList< CE_Tema_Articulo >();
        
        Datos datos = new Datos("WebSAE");
        String sql = "SELECT * FROM ce_tema te, ce_tema_articulo ta WHERE ta.ref_tema = te.te_id_tema AND ta.ref_articulo=" + id_articulo + ";";
        Registro registros = datos.consulta(sql);
        for (int i = 0; i < registros.size(); i++) {
            CE_Tema_Articulo elemento = new CE_Tema_Articulo();
            elemento.cr_CE_Tema_Articulo( registros.get(i) );
            elemento.ref_tema.cr_CE_Tema( registros.get(i) );
            elementos.add( elemento );
        }
        return elementos;
    }

    public static JSONObject toJSON(List< CE_Tema_Articulo > elementos) {
        JSONObject json = new JSONObject();
        try {
            JSONArray jsonItems = new JSONArray();
            for (Iterator< CE_Tema_Articulo > it = elementos.iterator(); it.hasNext();)
                jsonItems.put( toJSONObject( it.next() ) );
                
            json.put("items", jsonItems);
        } catch (JSONException ex) {
            Logger.getLogger(CE_Tema_Articulo.class.getName()).log(Level.SEVERE, null, ex);
        }
        return json;
    }

    public static JSONObject toJSONObject(CE_Tema_Articulo elemento) {
        JSONObject json = new JSONObject();
        try {
            json.put("tema", CE_Tema.toJSONObject( CE_Tema.buscar_tema( elemento.ref_tema.getTe_id_tema() ) ) );
        } catch (Exception ex) {
            Logger.getLogger(CE_Tema_Articulo.class.getName()).log(Level.SEVERE, null, ex);
        }
        return json;
    }    
}