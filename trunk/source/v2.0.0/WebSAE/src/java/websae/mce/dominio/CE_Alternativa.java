//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : WebSAE
//  @ File Name : CE_Alternativa.java
//  @ Date : 23/04/2009
//  @ Author : Guillermo Pizarro
//
//
package websae.mce.dominio;

import java.math.BigDecimal;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import mad.eventos.Datos;
import mad.objetos.Registro;
import mad.objetos.Table;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class CE_Alternativa {
    
    // <editor-fold defaultstate="collapsed" desc="Objeto Maestro">
    public CE_Pregunta ref_pregunta;
    // </editor-fold>
    // <editor-fold defaultstate="collapsed" desc="Objeto Dependiente">
    public CE_Respuesta ref_respuesta;
    // </editor-fold>
    // <editor-fold defaultstate="collapsed" desc="Atributos">
    private BigDecimal al_id_alternativa;
    private String al_nombre;
    private Integer al_orden;
    // </editor-fold>

    public CE_Alternativa() {
        this.ref_pregunta = new CE_Pregunta();
    }

    // <editor-fold defaultstate="collapsed" desc="Setters & Getters">
    public BigDecimal getAl_id_alternativa() {
        return al_id_alternativa;
    }

    public void setAl_id_alternativa(BigDecimal al_id_alternativa) {
        this.al_id_alternativa = al_id_alternativa;
    }

    public Integer getAl_orden() {
        return al_orden;
    }

    public void setAl_orden(Integer al_orden) {
        this.al_orden = al_orden;
    }

    public CE_Respuesta getRef_respuesta() {
        return ref_respuesta;
    }

    public void setRef_respuesta(CE_Respuesta ref_respuesta) {
        this.ref_respuesta = ref_respuesta;
    }

    public String getAl_nombre() {
        return al_nombre;
    }

    public void setAl_nombre(String al_nombre) {
        this.al_nombre = al_nombre;
    }

    public CE_Pregunta getRef_pregunta() {
        return ref_pregunta;
    }

    public void setRef_pregunta(CE_Pregunta ref_pregunta) {
        this.ref_pregunta = ref_pregunta;
    }
    // </editor-fold>

    public void cr_CE_Alternativa(Table objeto) {
        this.al_id_alternativa = new BigDecimal((Long) objeto.get("al_id_alternativa"));
        this.al_nombre = (String) objeto.get("al_nombre");
        this.al_orden = (Integer) objeto.get("al_orden");
        this.ref_pregunta.setPr_id_pregunta(new BigDecimal((Long) objeto.get("ref_pregunta")));
    }

    public static CE_Alternativa buscar_alternativa(String id_alternativa) {
        CE_Alternativa elemento = new CE_Alternativa();

        Datos datos = new Datos("WebSAE");
        String sql = "SELECT * FROM ce_alternativa WHERE al_id_alternativa = " + id_alternativa + ";";
        Registro registros = datos.consulta(sql);
        for (int i = 0; i < registros.size(); i++) {
            elemento.cr_CE_Alternativa((Table) registros.get(i));
        }
        return elemento;
    }

    public static List<CE_Alternativa> alternativas(String id_pregunta) {
        List<CE_Alternativa> elementos = new LinkedList<CE_Alternativa>();

        Datos datos = new Datos("WebSAE");
        String sql = "SELECT * FROM ce_alternativa WHERE ref_pregunta = " + id_pregunta + " ORDER BY al_orden asc, al_nombre;";
        Registro registros = datos.consulta(sql);
        for (int i = 0; i < registros.size(); i++) {
            CE_Alternativa elemento = new CE_Alternativa();
            elemento.cr_CE_Alternativa((Table) registros.get(i));
            elemento.ref_respuesta = new CE_Respuesta();
            elementos.add(elemento);
        }
        return elementos;
    }

    public static JSONObject toJSON(List<CE_Alternativa> elementos) {
        JSONObject json = new JSONObject();
        try {
            JSONArray jsonItems = new JSONArray();
            for (Iterator<CE_Alternativa> it = elementos.iterator(); it.hasNext();) {
                CE_Alternativa elemento = it.next();
                jsonItems.put(toJSONObject(elemento));
            }
            json.put("identifier", "id_alternativa");
            json.put("label", "nombre");
            json.put("items", jsonItems);
        } catch (JSONException ex) {
            Logger.getLogger(CE_Alternativa.class.getName()).log(Level.SEVERE, null, ex);
        }
        return json;
    }
    
    public static JSONObject toJSONObject(CE_Alternativa elemento) {
        JSONObject json = new JSONObject();
        try {
            json.put("id_alternativa", elemento.getAl_id_alternativa());
            json.put("nombre", elemento.getAl_nombre());
            json.put("orden", elemento.getAl_orden());
        } catch (Exception ex) {
            Logger.getLogger(CE_Alternativa.class.getName()).log(Level.SEVERE, null, ex);
        }
        return json;
    }

    public static JSONObject Alternativa_toJSON(List<CE_Alternativa> elementos) {
        JSONObject json = new JSONObject();
        try {
            JSONArray jsonItems = new JSONArray();
            for (Iterator<CE_Alternativa> it = elementos.iterator(); it.hasNext();) {
                jsonItems.put(Alternativa_toJSONObject(it.next()));
            }
            json.put("items", jsonItems);
        } catch (JSONException ex) {
            Logger.getLogger(CE_Alternativa.class.getName()).log(Level.SEVERE, null, ex);
        }
        return json;
    }

    public static JSONObject Alternativa_toJSONObject(CE_Alternativa elemento) {
        JSONObject json = new JSONObject();
        try {
            json.put("id_alternativa", elemento.getAl_id_alternativa());
            json.put("nombre", elemento.getAl_nombre());
            json.put("orden", elemento.getAl_orden());
            if (elemento.ref_respuesta != null)
                json.put("respuesta", CE_Respuesta.toJSONObject( elemento.ref_respuesta ));
        } catch (Exception ex) {
            Logger.getLogger(CE_Alternativa.class.getName()).log(Level.SEVERE, null, ex);
        }
        return json;
    }
}
