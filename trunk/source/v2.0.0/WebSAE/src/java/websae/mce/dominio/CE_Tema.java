//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : WebSAE
//  @ File Name : CE_Tema.java
//  @ Date : 23/04/2009
//  @ Author : Guillermo Pizarro
//
//
package websae.mce.dominio;

import java.math.BigDecimal;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import mad.eventos.Datos;
import mad.objetos.Registro;
import mad.objetos.Table;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class CE_Tema {

    // <editor-fold defaultstate="collapsed" desc="Objetos Maestros">
    public CE_Convocatoria ref_convocatoria;
    // </editor-fold>
    // <editor-fold defaultstate="collapsed" desc="Objetos Dependientes">
    public List<CE_Tema_Articulo> ref_tema_articulo;
    // </editor-fold>
    // <editor-fold defaultstate="collapsed" desc="Atributos">
    private BigDecimal te_id_tema;
    private String te_nombre;
    // </editor-fold>

    public CE_Tema() {
    }

    // <editor-fold defaultstate="collapsed" desc="Setters & Getters">
    public CE_Convocatoria getRef_convocatoria() {
        return ref_convocatoria;
    }

    public void setRef_convocatoria(CE_Convocatoria ref_convocatoria) {
        this.ref_convocatoria = ref_convocatoria;
    }

    public List<CE_Tema_Articulo> getRef_tema_articulo() {
        return ref_tema_articulo;
    }

    public void setRef_tema_articulo(List<CE_Tema_Articulo> ref_tema_articulo) {
        this.ref_tema_articulo = ref_tema_articulo;
    }

    public BigDecimal getTe_id_tema() {
        return te_id_tema;
    }

    public void setTe_id_tema(BigDecimal te_id_tema) {
        this.te_id_tema = te_id_tema;
    }

    public String getTe_nombre() {
        return te_nombre;
    }

    public void setTe_nombre(String te_nombre) {
        this.te_nombre = te_nombre;
    }
    // </editor-fold>

    public void cr_CE_Tema(Table objeto) {
        this.te_id_tema = new BigDecimal((Long) objeto.get("te_id_tema"));
        this.te_nombre = (String) objeto.get("te_nombre");
    }

    public void fin_CE_Tema() {
    }

    public static CE_Tema buscar_tema(BigDecimal id_tema) {
        CE_Tema elemento = new CE_Tema();
        
        Datos datos = new Datos("WebSAE");
        String sql = "SELECT * FROM ce_tema WHERE te_id_tema=" + id_tema + ";";
        Registro registros = datos.consulta(sql);
        for (int i = 0; i < registros.size(); i++) {
            Table objeto = (Table) registros.get(i);
            elemento.cr_CE_Tema(objeto);
        }
        return elemento;
    }
    
    public static List<CE_Tema> temas(String id_convocatoria) {
        List<CE_Tema> elementos = new LinkedList<CE_Tema>();

        Datos datos = new Datos("WebSAE");
        String sql = "SELECT * FROM ce_tema te WHERE te.ref_convocatoria=" + id_convocatoria + " ORDER BY te.te_nombre;";
        Registro registros = datos.consulta(sql);
        for (int i = 0; i < registros.size(); i++) {
            Table objeto = (Table) registros.get(i);
            CE_Tema elemento = new CE_Tema();
            elemento.cr_CE_Tema(objeto);
            elementos.add(elemento);
        }
        return elementos;
    }

    public static List<CE_Tema> temas_por_evento(String id_evento) {
        List<CE_Tema> elementos = new LinkedList<CE_Tema>();

        Datos datos = new Datos("WebSAE");
        String sql = "SELECT * FROM ce_tema te, ce_convocatoria co WHERE te.ref_convocatoria=co.co_id_convocatoria and co.ref_evento=" + id_evento + " ORDER BY te.te_nombre;";
        Registro registros = datos.consulta(sql);
        for (int i = 0; i < registros.size(); i++) {
            Table objeto = (Table) registros.get(i);
            CE_Tema elemento = new CE_Tema();
            elemento.cr_CE_Tema(objeto);
            elementos.add(elemento);
        }
        return elementos;
    }

    public static JSONObject toJSON(List<CE_Tema> elementos) {
        JSONObject json = new JSONObject();
        try {
            JSONArray jsonItems = new JSONArray();
            for (Iterator<CE_Tema> it = elementos.iterator(); it.hasNext();) {
                CE_Tema elemento = it.next();
                jsonItems.put(toJSONObject(elemento));
            }
            json.put("identifier", "id_tema");
            json.put("label", "nombre");
            json.put("items", jsonItems);
        } catch (JSONException ex) {
            Logger.getLogger(CE_Tema.class.getName()).log(Level.SEVERE, null, ex);
        }
        return json;
    }

    public static JSONObject toJSONObject(CE_Tema elemento) {
        JSONObject json = new JSONObject();
        try {
            json.put("id_tema", elemento.getTe_id_tema());
            json.put("nombre", elemento.getTe_nombre());
        } catch (Exception ex) {
            Logger.getLogger(CE_Tema.class.getName()).log(Level.SEVERE, null, ex);
        }
        return json;
    }
}
