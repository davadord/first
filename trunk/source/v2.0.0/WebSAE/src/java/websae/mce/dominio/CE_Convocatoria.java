//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : WebSAE
//  @ File Name : CE_Convocatoria.java
//  @ Date : 23/04/2009
//  @ Author : Guillermo Pizarro
//
//
package websae.mce.dominio;

import java.math.BigDecimal;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import mad.eventos.Datos;
import mad.objetos.Registro;
import mad.objetos.Table;
import org.json.JSONObject;
import websae.informacion.Lenguaje;
import websae.mae.dominio.AE_Evento;

public class CE_Convocatoria {

    // <editor-fold defaultstate="collapsed" desc="Objetos Maestros">
    public AE_Evento ref_evento;
    // </editor-fold>
    // <editor-fold defaultstate="collapsed" desc="Objetos Dependientes">
    public CE_Evaluacion ref_evaluacion;
    public List<CE_Tema> ref_tema;
    // </editor-fold>
    // <editor-fold defaultstate="collapsed" desc="Atributos">
    private BigDecimal co_id_convocatoria;
    private String[] co_descripcion;
    /**
     * Ruta del formato del paper a presentar.
     **/
    private String co_ruta_formato;
    private Date co_fecha_max_presentacion_resumen;
    private Date co_fecha_max_presentacion;
    private Date co_fecha_max_evaluacion;
    private Date co_fecha_max_aceptacion;
    private Date co_fecha_max_correccion;
    private String co_estado;
    // </editor-fold>

    public CE_Convocatoria() {
        this.co_descripcion = new String[Lenguaje.TOTAL];
    }

    // <editor-fold defaultstate="collapsed" desc="Setters & Getters">
    public String getCo_descripcion(String lang) {
        return co_descripcion[Lenguaje.parse(lang)];
    }

    public void setCo_descripcion(String co_descripcion, String lang) {
        this.co_descripcion[Lenguaje.parse(lang)] = co_descripcion;
    }

    public String[] getCo_descripcion() {
        return co_descripcion;
    }

    public void setCo_descripcion(String[] co_descripcion) {
        this.co_descripcion = co_descripcion;
    }

    public Date getCo_fecha_max_presentacion_resumen() {
        return co_fecha_max_presentacion_resumen;
    }

    public void setCo_fecha_max_presentacion_resumen(String fecha_max_presentacion_resumen) {
        if (fecha_max_presentacion_resumen != null) {
            DateFormat fecha = new SimpleDateFormat("yyyy-MM-dd");
            try {
                this.co_fecha_max_presentacion_resumen = (Date) fecha.parse(fecha_max_presentacion_resumen);
            } catch (ParseException ex) {
                this.co_fecha_max_presentacion_resumen = null;
                Logger.getLogger(CE_Convocatoria.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            this.co_fecha_max_presentacion_resumen = null;
        }
    }

    public String getCo_estado() {
        return co_estado;
    }

    public void setCo_estado(String co_estado) {
        this.co_estado = co_estado;
    }

    public Date getCo_fecha_max_aceptacion() {
        return co_fecha_max_aceptacion;
    }

    public void setCo_fecha_max_aceptacion(String fecha_max_aceptacion) {
        if (fecha_max_aceptacion != null) {
            DateFormat fecha = new SimpleDateFormat("yyyy-MM-dd");
            try {
                this.co_fecha_max_aceptacion = (Date) fecha.parse(fecha_max_aceptacion);
            } catch (ParseException ex) {
                this.co_fecha_max_aceptacion = null;
                Logger.getLogger(CE_Convocatoria.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            this.co_fecha_max_aceptacion = null;
        }
    }

    public Date getCo_fecha_max_correccion() {
        return co_fecha_max_correccion;
    }

    public void setCo_fecha_max_correccion(String fecha_max_correccion) {
        if (fecha_max_correccion != null) {
            DateFormat fecha = new SimpleDateFormat("yyyy-MM-dd");
            try {
                this.co_fecha_max_correccion = (Date) fecha.parse(fecha_max_correccion);
            } catch (ParseException ex) {
                this.co_fecha_max_correccion = null;
                Logger.getLogger(CE_Convocatoria.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            this.co_fecha_max_correccion = null;
        }
    }

    public Date getCo_fecha_max_evaluacion() {
        return co_fecha_max_evaluacion;
    }

    public void setCo_fecha_max_evaluacion(String fecha_max_evaluacion) {
        if (fecha_max_evaluacion != null) {
            DateFormat fecha = new SimpleDateFormat("yyyy-MM-dd");
            try {
                this.co_fecha_max_evaluacion = (Date) fecha.parse(fecha_max_evaluacion);
            } catch (ParseException ex) {
                this.co_fecha_max_evaluacion = null;
                Logger.getLogger(CE_Convocatoria.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            this.co_fecha_max_evaluacion = null;
        }
    }

    public Date getCo_fecha_max_presentacion() {
        return co_fecha_max_presentacion;
    }

    public void setCo_fecha_max_presentacion(String fecha_max_presentacion) {
        if (fecha_max_presentacion != null) {
            DateFormat fecha = new SimpleDateFormat("yyyy-MM-dd");
            try {
                this.co_fecha_max_presentacion = (Date) fecha.parse(fecha_max_presentacion);
            } catch (ParseException ex) {
                this.co_fecha_max_presentacion = null;
                Logger.getLogger(CE_Convocatoria.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            this.co_fecha_max_presentacion = null;
        }
    }

    public BigDecimal getCo_id_convocatoria() {
        return co_id_convocatoria;
    }

    public void setCo_id_convocatoria(BigDecimal co_id_convocatoria) {
        this.co_id_convocatoria = co_id_convocatoria;
    }

    public String getCo_ruta_formato() {
        return co_ruta_formato;
    }

    public void setCo_ruta_formato(String co_ruta_formato) {
        this.co_ruta_formato = co_ruta_formato;
    }

    public CE_Evaluacion getRef_evaluacion() {
        return ref_evaluacion;
    }

    public void setRef_evaluacion(CE_Evaluacion ref_evaluacion) {
        this.ref_evaluacion = ref_evaluacion;
    }

    public AE_Evento getRef_evento() {
        return ref_evento;
    }

    public void setRef_evento(AE_Evento ref_evento) {
        this.ref_evento = ref_evento;
    }

    public List<CE_Tema> getRef_tema() {
        return ref_tema;
    }

    public void setRef_tema(List<CE_Tema> ref_tema) {
        this.ref_tema = ref_tema;
    }
    // </editor-fold>

    public void cr_CE_Convocatoria(Table objeto) {
        this.co_id_convocatoria = new BigDecimal((Long) objeto.get("co_id_convocatoria"));
        this.setCo_descripcion((String) objeto.get("co_descripcion_" + Lenguaje.LANG_ES), Lenguaje.LANG_ES);
        this.setCo_descripcion((String) objeto.get("co_descripcion_" + Lenguaje.LANG_EN), Lenguaje.LANG_EN);
        this.setCo_descripcion((String) objeto.get("co_descripcion_" + Lenguaje.LANG_PT), Lenguaje.LANG_PT);
        this.co_ruta_formato = (String) objeto.get("co_ruta_formato");
        this.co_fecha_max_presentacion_resumen = (Date) objeto.get("co_fecha_max_presentacion_resumen");
        this.co_fecha_max_presentacion = (Date) objeto.get("co_fecha_max_presentacion");
        this.co_fecha_max_evaluacion = (Date) objeto.get("co_fecha_max_evaluacion");
        this.co_fecha_max_aceptacion = (Date) objeto.get("co_fecha_max_aceptacion");
        this.co_fecha_max_correccion = (Date) objeto.get("co_fecha_max_correccion");
        this.co_estado = (String) objeto.get("co_estado");
    }
    
    public static CE_Convocatoria buscar_convocatoria(String id_evento) {
        CE_Convocatoria elemento = new CE_Convocatoria();

        Datos dato = new Datos("WebSAE");
        String sql = "SELECT * FROM ce_convocatoria WHERE ref_evento = " + id_evento + ";";
        Registro registros = dato.consulta(sql);
        for (int i = 0; i < registros.size(); i++) {
            Table objeto = registros.get(i);
            elemento.cr_CE_Convocatoria(objeto);
        }
        return elemento;
    }

    public static Boolean tiene_resumen(String id_evento) {
        Datos dato = new Datos("WebSAE");
        String sql = "SELECT co_id_convocatoria FROM ce_convocatoria WHERE ref_evento = " + id_evento + " AND co_fecha_max_presentacion_resumen IS NOT NULL;";
        Registro registros = dato.consulta(sql);
        for (int i = 0; i < registros.size(); i++)
            return Boolean.TRUE;
        
        return Boolean.FALSE;
    }

    public static JSONObject toJSONObject(CE_Convocatoria elemento) {
        JSONObject json = new JSONObject();
        try {
            json.put("id_convocatoria", elemento.getCo_id_convocatoria());
            json.put("descripcion_es", elemento.getCo_descripcion(Lenguaje.LANG_ES));
            json.put("descripcion_en", elemento.getCo_descripcion(Lenguaje.LANG_EN));
            json.put("descripcion_pt", elemento.getCo_descripcion(Lenguaje.LANG_PT));
            json.put("ruta_formato", elemento.getCo_ruta_formato());
            json.put("fecha_max_resumen", elemento.getCo_fecha_max_presentacion_resumen());
            json.put("fecha_max_presentacion", elemento.getCo_fecha_max_presentacion());
            json.put("fecha_max_evaluacion", elemento.getCo_fecha_max_evaluacion());
            json.put("fecha_max_notificacion", elemento.getCo_fecha_max_aceptacion());
            json.put("fecha_max_correccion", elemento.getCo_fecha_max_correccion());
            json.put("estado", elemento.getCo_estado());
        } catch (Exception ex) {
            Logger.getLogger(CE_Convocatoria.class.getName()).log(Level.SEVERE, null, ex);
        }
        return json;
    }
}
